var net = require('net');
var stanza = require("../lib/stanza.js");
var countControl = 0;
var countPayload = 0;
var errorCount = 0;
var REPEAT = 500;

var BGC = String.fromCharCode(stanza.code_begin_control);
var BGP = String.fromCharCode(stanza.code_begin_payload);
var END = String.fromCharCode(stanza.code_terminator);
var testControl = BGC
  + "Again, you can't connect the dots looking forward; you can only connect them looking backwards." +END;
var testPayload = BGP
  + "So you have to trust that the dots will somehow connect in your future. You have to trust in something." +END;

var buf;
var server = stanza.createServer(function(socket) {
  console.log('server connected');
  socket.on('control', function(str) {
    if (str == testControl) {
      countControl++;
    } else {
      console.log('error');
      errorCount++;
    }
  });
  socket.on('payload', function(str) {
    if (str.charAt(0) == BGP) {
      buf = str;
    } else {
      buf += str;
    }
    if (buf.charAt(buf.length-1) == END) {
      if (buf == testPayload) {
        countPayload++;
      } else {
        console.log('error');
        errorCount++;
      }
    }
  });
  socket.on('end', function() {
    console.log('result: %d, %d, %d (supposed to be %d, %d, 0)', countControl, countPayload, errorCount, REPEAT, REPEAT);
  });
}).listen(8080);

console.log('server is listening 8080');

var client = net.connect({port: 8080}, function() {
  console.log('client connected');
});

var testAll = '';
for (var i=0; i < REPEAT; i++) {
  testAll += testControl;
}
for (var i=0; i < REPEAT; i++) {
  testAll += testPayload;
}

var index = 0;
function loop(str, callback) {
  setTimeout(function() {
    if (index < str.length) {
      var len = (1 + Math.floor(Math.random() * 32));
      len = len * len;
      client.write(str.substr(index, len));
      index += len;
      loop(str, callback);
    } else {
      callback();
    }
  }, 50);
}

loop(testAll, function() {
  client.end();
  server.close();
});
